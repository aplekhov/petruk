/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ObjectSelectionDialog.java
 *
 * Created on Sep 26, 2009, 6:35:19 PM
 */
package ui.dialog;

import java.awt.Component;
import java.awt.Dialog;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.ListSelectionModel;

/**
 *
 * @author anthony
 */
public class ObjectSelectionDialog extends javax.swing.JDialog {

  private HashMap<SetupDialogManageable, JCheckBox> objectCheckBoxes;
  private static Logger logger = Logger.getLogger(ObjectSelectionDialog.class.getPackage().getName());

  public static List<SetupDialogManageable> showSelectionDialog(Dialog parent, String title, String labelText, Map<SetupDialogManageable, Boolean> objects) {
    ObjectSelectionDialog dialog = new ObjectSelectionDialog(parent, title, labelText, objects);
    dialog.setVisible(true);
    return new LinkedList<SetupDialogManageable>(dialog.objectCheckBoxes.keySet());
  }

  /** Creates new form ObjectSelectionDialog */
  private ObjectSelectionDialog(Dialog parent, String title, String labelText, Map<SetupDialogManageable, Boolean> objects) {
    super(parent, title, true);
    initComponents();
    _setupComponents(labelText, objects);
  }

  private void _setupComponents(String labelText, Map<SetupDialogManageable, Boolean> objects) {
    label.setText(labelText);

    objectCheckBoxes = new HashMap<SetupDialogManageable, JCheckBox>(objects.size());
    DefaultListModel listModel = new DefaultListModel();
    LinkedList<SetupDialogManageable> sortedObjects =
            new LinkedList<SetupDialogManageable>(objects.keySet());
    Collections.sort(sortedObjects);
    for (SetupDialogManageable object : sortedObjects) {
      JCheckBox checkbox = new JCheckBox(object.getListValue(), objects.get(object).booleanValue());
      objectCheckBoxes.put(object, checkbox);
      listModel.addElement(object);
    }
    objectList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    objectList.setModel(listModel);
    objectList.setCellRenderer(new ListCheckboxRenderer());
    MouseListener mouseListener = new MouseAdapter() {

      public void mouseClicked(MouseEvent e) {
        SetupDialogManageable object =
                (SetupDialogManageable) objectList.getModel().getElementAt(objectList.locationToIndex(e.getPoint()));
        JCheckBox clickedCheckbox = objectCheckBoxes.get(object);
        clickedCheckbox.setSelected(!clickedCheckbox.isSelected());
        objectList.repaint();
      }
    };
    objectList.addMouseListener(mouseListener);



    okButton.addActionListener(new java.awt.event.ActionListener() {

      public void actionPerformed(java.awt.event.ActionEvent evt) {
        _filterUncheckedObjects();
        dispose();
      }
    });

    cancelButton.addActionListener(new java.awt.event.ActionListener() {

      public void actionPerformed(java.awt.event.ActionEvent evt) {
        objectCheckBoxes.clear();
        dispose();
      }
    });
  }

  private void _filterUncheckedObjects() {
    LinkedList<SetupDialogManageable> objectsToRemove = new LinkedList<SetupDialogManageable>();
    for (SetupDialogManageable object : objectCheckBoxes.keySet()) {
      JCheckBox checkbox = objectCheckBoxes.get(object);
      if (checkbox.isSelected() == false) {
        objectsToRemove.add(object);
      }
    }
    for(SetupDialogManageable object: objectsToRemove){
       logger.info("removing unchecked object: " + object);
       objectCheckBoxes.remove(object);
    }
  }

  class ListCheckboxRenderer implements ListCellRenderer {

    public Component getListCellRendererComponent(JList list,
            Object value,
            int index,
            boolean isSelected,
            boolean cellHasFocus) {
      JCheckBox checkBox = objectCheckBoxes.get((SetupDialogManageable) value);
      return checkBox;
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    objectList = new javax.swing.JList();
    label = new javax.swing.JLabel();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jScrollPane1.setViewportView(objectList);

    okButton.setText("OK");

    cancelButton.setText("Cancel");

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(label)
          .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
          .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
            .add(okButton)
            .add(18, 18, 18)
            .add(cancelButton)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(label)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 212, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .add(41, 41, 41)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(cancelButton)
          .add(okButton))
        .addContainerGap(25, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel label;
  private javax.swing.JList objectList;
  private javax.swing.JButton okButton;
  // End of variables declaration//GEN-END:variables
}
