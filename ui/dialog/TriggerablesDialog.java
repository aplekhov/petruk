/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TriggerablesDialog.java
 *
 * Created on Oct 23, 2009, 10:44:45 AM
 */
package ui.dialog;

import java.awt.Component;
import java.awt.Frame;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.EditableModel.NotifiableStateEdit;
import ui.Triggerable;
import ui.component.SetHotKeyButton;

/**
 *
 * @author anthony
 */
public class TriggerablesDialog extends javax.swing.JDialog implements ChangeListener {
  private DefaultListModel listModel;
  private LinkedList<NotifiableStateEdit> stateEdits;
  private boolean result;


  public static boolean showDialog(Frame frame, List<Triggerable> triggerables) {
    TriggerablesDialog dialog = new TriggerablesDialog(frame, triggerables);
    dialog.setVisible(true);
    return dialog.result;
  }

  /** Creates new form TriggerablesDialog */
  private TriggerablesDialog(Frame frame, List<Triggerable> triggerables) {
    super(frame, "Edit Hotkeys", true);
    this.setResizable(false);

    result = false;
    listModel = new DefaultListModel();
    stateEdits = new LinkedList<NotifiableStateEdit>();
    for(Triggerable triggerable:triggerables){
      listModel.addElement(triggerable);
      stateEdits.add(triggerable.getStateEdit());
    }
    
    initComponents();
    _setupComponents();

  }

  private void _setupComponents() {
    // setup list
    objectList.setCellRenderer(new TriggerableListRenderer());
    objectList.setModel(listModel);
    ListChangeListener listChangeListener = new ListChangeListener();
    objectList.addListSelectionListener(listChangeListener);
    if (listModel.getSize() > 0) {
      objectList.setSelectedIndex(0);
    }
    ((SetHotKeyButton) setHotKeyButton).addChangeListener(this);

    okButton.addActionListener(new java.awt.event.ActionListener() {

      public void actionPerformed(java.awt.event.ActionEvent evt) {
        for(NotifiableStateEdit stateEdit:stateEdits){
          stateEdit.end();
        }
        result = true;
        dispose();
      }
    });

    cancelButton.addActionListener(new java.awt.event.ActionListener() {

      public void actionPerformed(java.awt.event.ActionEvent evt) {
        for(NotifiableStateEdit stateEdit:stateEdits){
          stateEdit.undo();
        }
        result = false;
        dispose();
      }
    });
  }

  public void stateChanged(ChangeEvent e){
    Triggerable triggerable = (Triggerable) objectList.getSelectedValue();
    triggerable.setTrigger(((SetHotKeyButton) setHotKeyButton).getCapturedKeyStroke());
    objectList.repaint();
    //if (triggerable.getTrigger() != null) {
    //  hotKeyLabel.setText(triggerable.getTrigger().toString());
    //  ((SetHotKeyButton) setHotKeyButton).setCapturedKeyStroke(triggerable.getTrigger());
    //}
  }


  class TriggerableListRenderer extends DefaultListCellRenderer {

    public Component getListCellRendererComponent(JList list,
            Object value,
            int index,
            boolean isSelected,
            boolean cellHasFocus) {
      Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
      this.setText(((Triggerable) value).getTriggerableListValue());
      return c;
    }
  }

  class ListChangeListener implements ListSelectionListener, ListDataListener {

    public void contentsChanged(ListDataEvent e) {
    }

    public void intervalAdded(ListDataEvent e) {
    }

    public void intervalRemoved(ListDataEvent e) {
    }

    public void valueChanged(ListSelectionEvent e) {
      Triggerable selectedObject =
              (Triggerable) objectList.getSelectedValue();
      ((SetHotKeyButton) setHotKeyButton).setCapturedKeyStroke(selectedObject.getTrigger());
    }
}

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    objectList = new javax.swing.JList();
    hotKeyLabel = new javax.swing.JTextField();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    setHotKeyButton = new SetHotKeyButton(this, hotKeyLabel);

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    objectList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane1.setViewportView(objectList);

    hotKeyLabel.setEditable(false);
    hotKeyLabel.setEnabled(false);

    okButton.setText("OK");

    cancelButton.setText("Cancel");

    jLabel1.setText("Actions to trigger:");

    jLabel2.setText("HotKey:");

    setHotKeyButton.setText("Set HotKey");
    setHotKeyButton.setActionCommand("Set Key");

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(layout.createSequentialGroup()
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 260, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(setHotKeyButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
              .add(jLabel2)
              .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                .add(layout.createSequentialGroup()
                  .add(okButton)
                  .add(18, 18, 18)
                  .add(cancelButton))
                .add(org.jdesktop.layout.GroupLayout.LEADING, hotKeyLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
          .add(jLabel1))
        .addContainerGap(25, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
          .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(jLabel1)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
          .add(layout.createSequentialGroup()
            .add(63, 63, 63)
            .add(jLabel2)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
            .add(hotKeyLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(18, 18, 18)
            .add(setHotKeyButton)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 77, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
              .add(cancelButton)
              .add(okButton))))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JTextField hotKeyLabel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JList objectList;
  private javax.swing.JButton okButton;
  private javax.swing.JButton setHotKeyButton;
  // End of variables declaration//GEN-END:variables
}
